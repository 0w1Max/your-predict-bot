const { getRandomPrediction, addPrediction } = require('./predictions');
const logger = require('./logger');

const handleCommands = async (bot, msg) => {
  const chatId = msg.chat.id;
  const text = msg.text?.trim();

  if (!text) return;

  if (text === '/start') {
    bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç! üîÆ –Ø –±–æ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π. –ò—Å–ø–æ–ª—å–∑—É–π /predict, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ.');
  } else if (text === '/predict') {
    const prediction = await getRandomPrediction(chatId);
    bot.sendMessage(chatId, `üîÆ –¢–≤–æ—ë –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: ${prediction}`);
  } else if (text.startsWith('/add')) {
    const newPrediction = text.replace('/add', '').trim();
    if (!newPrediction) {
      return bot.sendMessage(chatId, '‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add [—Ç–µ–∫—Å—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è]');
    }
    const success = await addPrediction(chatId, newPrediction);
    bot.sendMessage(chatId, success ? '‚úÖ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!' : '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏.');
  } else {
    bot.sendMessage(chatId, '‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /predict –∏–ª–∏ /add [—Ç–µ–∫—Å—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è]');
  }
};

module.exports = { handleCommands };